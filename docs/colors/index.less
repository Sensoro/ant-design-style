@import "../../style/index";

.generate-colors(@status, @n: 10, @i: 1) when (@i =< @n) {
  @background: "@{status}-@{i}";
  .@{status}-@{i} {
    background: @@background;
  }
  .generate-colors(@status, @n, (@i + 1));
}

.generate-colors(blue);
.generate-colors(violet);
.generate-colors(purple);
.generate-colors(red);
.generate-colors(orange);
.generate-colors(gold);
.generate-colors(yellow);
.generate-colors(lime);
.generate-colors(green);
.generate-colors(lightblue);
.generate-colors(grey);

.colors {
  width: 100%;

  .color-box {
    width: 80px;
    height: 80px;
    font-size: @font-size-sm;
    text-align: center;
    padding: @padding-md 0;
    transition: all @animation-duration-base;
    cursor: pointer;

    &:hover {
      border-radius: @border-radius-base;
      transform: scale(1.1);
    }
  }
}

.func {
  width: 100%;

  .func-color {
    display: flex;
    align-items: center;

    &-demo {
      display: inline-block;
      width: 24px;
      height: 24px;
      margin-right: 16px;
      border-radius: @border-radius-lg;
    }
  }

  .func-type {
    > div {
      width: 100%;
      height: 78px;
      margin-bottom: @margin-xs;
      transition: all @animation-duration-base;
      cursor: pointer;

      &:hover {
        border-radius: @border-radius-base;
        transform: scale(1.1);
      }
    }

    > p {
      margin-bottom: @margin-xs;
    }

    p:nth-child(2n) {
      color: @grey-8;
    }

    p:nth-child(3n) {
      font-weight: 500;
      color: @text-color-primary;
    }

    p:last-child {
      font-size: @font-size-sm;
    }
  }
}
